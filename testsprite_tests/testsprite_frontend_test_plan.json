[
  {
    "id": "TC001",
    "title": "Successful Authentication via Email OTP",
    "description": "Verify that users can log in successfully using their email address with correct OTP input.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Enter a valid registered email address."
      },
      {
        "type": "action",
        "description": "Request OTP and receive it via email."
      },
      {
        "type": "action",
        "description": "Input the correct OTP."
      },
      {
        "type": "action",
        "description": "Submit the OTP for verification."
      },
      {
        "type": "assertion",
        "description": "Verify that the user is logged in successfully and redirected to the dashboard."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Authentication Failure with Incorrect OTP",
    "description": "Verify that authentication fails and proper error messages are shown when an incorrect OTP is submitted.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Enter a valid registered email or WhatsApp number."
      },
      {
        "type": "action",
        "description": "Request OTP."
      },
      {
        "type": "action",
        "description": "Enter an incorrect OTP."
      },
      {
        "type": "action",
        "description": "Submit the OTP."
      },
      {
        "type": "assertion",
        "description": "Verify the login attempt is rejected with an appropriate error message about invalid OTP."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Successful Authentication via WhatsApp OTP",
    "description": "Verify users can log in using their WhatsApp number and correctly entered OTP.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Enter a valid registered WhatsApp phone number."
      },
      {
        "type": "action",
        "description": "Request OTP and receive it via WhatsApp message."
      },
      {
        "type": "action",
        "description": "Input the correct OTP."
      },
      {
        "type": "action",
        "description": "Submit for verification."
      },
      {
        "type": "assertion",
        "description": "Confirm user logs in successfully and accesses the main application."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Task Creation with Valid Inputs",
    "description": "Verify that a user can create a task with all mandatory fields correctly filled and optional fields as well.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the task creation page."
      },
      {
        "type": "action",
        "description": "Enter valid task title, description, assign to one or more users, and set status."
      },
      {
        "type": "action",
        "description": "Optionally add comments and set due date."
      },
      {
        "type": "action",
        "description": "Submit the task creation form."
      },
      {
        "type": "assertion",
        "description": "Confirm the task is successfully created, appears in the task list, and all input values are saved."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Task Creation Validation Errors for Missing Required Fields",
    "description": "Verify form validation prevents task creation when mandatory fields are missing, displaying real-time feedback.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the task creation page."
      },
      {
        "type": "action",
        "description": "Leave required fields such as task title or assignee empty."
      },
      {
        "type": "assertion",
        "description": "Confirm validation errors are displayed in real-time near input fields."
      },
      {
        "type": "action",
        "description": "Attempt to submit the form."
      },
      {
        "type": "assertion",
        "description": "Verify that submission is blocked and user is notified about missing required information."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Task Update: Status Change and Comment Addition",
    "description": "Verify that a user can update a task's status and add comments with changes reflecting in the UI.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open an existing task detail page."
      },
      {
        "type": "action",
        "description": "Change the status of the task to a valid new status."
      },
      {
        "type": "action",
        "description": "Add a new comment to the task."
      },
      {
        "type": "action",
        "description": "Save the updates."
      },
      {
        "type": "assertion",
        "description": "Verify the status is updated and comment is visible in task details."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Task Deletion with Confirmation and UI Update",
    "description": "Verify that a user can delete a task after confirmation and that the task is removed from task lists.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to a task card or details page."
      },
      {
        "type": "action",
        "description": "Click on the delete option for the task."
      },
      {
        "type": "assertion",
        "description": "Verify that a confirmation dialog appears."
      },
      {
        "type": "action",
        "description": "Confirm deletion."
      },
      {
        "type": "assertion",
        "description": "Check that the task is removed from UI and the backend."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Project Creation with Template Selection",
    "description": "Verify users can create a project, optionally select a template for task prepopulation, and assign team members.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to project creation dialog or page."
      },
      {
        "type": "action",
        "description": "Input valid project name and details."
      },
      {
        "type": "action",
        "description": "Select a template from available project templates."
      },
      {
        "type": "action",
        "description": "Assign team members with roles."
      },
      {
        "type": "action",
        "description": "Submit the project creation form."
      },
      {
        "type": "assertion",
        "description": "Verify the project is created with tasks from the template and team assignments applied."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Project Creation Validation Errors",
    "description": "Verify that mandatory fields in project creation show validation errors and prevent submission when invalid or missing.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open project creation form."
      },
      {
        "type": "action",
        "description": "Leave required fields blank or enter invalid data."
      },
      {
        "type": "assertion",
        "description": "Confirm real-time validation errors appear and submission is blocked."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Team Member Invitation with Email Validation",
    "description": "Verify that an admin can invite users with valid email addresses and that invalid emails prompt errors.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open team management page and invite user dialog."
      },
      {
        "type": "action",
        "description": "Enter a valid email address of the user to invite."
      },
      {
        "type": "action",
        "description": "Submit the invitation."
      },
      {
        "type": "assertion",
        "description": "Verify the invitation is sent, and user appears as pending invite."
      },
      {
        "type": "action",
        "description": "Attempt inviting a user with an invalid email format."
      },
      {
        "type": "assertion",
        "description": "Confirm that a validation error message prevents submission."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Role Assignment and Modification for Team Members",
    "description": "Verify team leads can assign and update roles for team members with changes properly reflected.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to team members list."
      },
      {
        "type": "action",
        "description": "Select a team member and open role edit dialog."
      },
      {
        "type": "action",
        "description": "Change the member's role to another valid role."
      },
      {
        "type": "action",
        "description": "Save the changes."
      },
      {
        "type": "assertion",
        "description": "Confirm the role is updated and reflected in the team list."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "WhatsApp Message Sending and Delivery Confirmation",
    "description": "Verify that a user can send messages via WhatsApp integration and receive delivery confirmations.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open chat or messaging interface with WhatsApp integration."
      },
      {
        "type": "action",
        "description": "Compose and send a valid message."
      },
      {
        "type": "assertion",
        "description": "Verify the message is sent and a delivery confirmation or read receipt is received and shown."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "WhatsApp Incoming Message and Notification Handling",
    "description": "Verify that incoming WhatsApp messages trigger correct notification displays and webhook processing.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate an incoming WhatsApp message via webhook."
      },
      {
        "type": "assertion",
        "description": "Verify the message is received in the app and a user notification/toast is displayed."
      },
      {
        "type": "assertion",
        "description": "Check that the message content updates UI components correctly."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Template Creation and Application for Tasks",
    "description": "Verify that users can create reusable task templates and apply them to new tasks efficiently.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the template management section."
      },
      {
        "type": "action",
        "description": "Create a new task template with valid fields."
      },
      {
        "type": "action",
        "description": "Save the template."
      },
      {
        "type": "action",
        "description": "Use the template when creating a new task."
      },
      {
        "type": "assertion",
        "description": "Verify that task fields are prepopulated according to the selected template."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Multi-Language Client-Side Form Validation",
    "description": "Verify form fields validate correctly in different languages and show appropriate real-time validation messages.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Set the user interface language to a supported language (e.g., Spanish, French)."
      },
      {
        "type": "action",
        "description": "Navigate to any form (e.g., task creation) requiring validation."
      },
      {
        "type": "action",
        "description": "Input invalid data or leave required fields empty."
      },
      {
        "type": "assertion",
        "description": "Confirm that validation errors appear in the selected language with real-time feedback."
      },
      {
        "type": "action",
        "description": "Correct the input errors."
      },
      {
        "type": "assertion",
        "description": "Verify validation messages disappear and form can be submitted."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Routing and Navigation: Protected Route Access",
    "description": "Verify that protected routes require authentication and unauthenticated users are redirected to login.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to navigate to a protected page (e.g., Project Management) without authentication."
      },
      {
        "type": "assertion",
        "description": "Verify the user is redirected to the login page."
      },
      {
        "type": "action",
        "description": "Login successfully."
      },
      {
        "type": "action",
        "description": "Navigate back to the protected page."
      },
      {
        "type": "assertion",
        "description": "Confirm the page is accessible and loads with proper content."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Deep Linking with React Router",
    "description": "Verify deep linking to nested routes (e.g., task details inside a project) loads correct content and state.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Copy a deep link URL pointing to a specific task or analytics view."
      },
      {
        "type": "action",
        "description": "Open the URL in a new browser window or tab."
      },
      {
        "type": "assertion",
        "description": "Verify the app loads the intended nested route and displays correct data."
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Analytics Dashboard Data Accuracy and Visualization",
    "description": "Verify the analytics dashboard displays accurate metrics and charts for projects, tasks, and users updated in real time.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the analytics dashboard."
      },
      {
        "type": "action",
        "description": "Create and update tasks and projects to generate data."
      },
      {
        "type": "assertion",
        "description": "Verify the displayed charts and key metrics reflect the data accurately."
      },
      {
        "type": "action",
        "description": "Filter or change dashboard views."
      },
      {
        "type": "assertion",
        "description": "Confirm visualizations update correctly without errors."
      }
    ]
  },
  {
    "id": "TC019",
    "title": "UI Component Accessibility and ARIA Compliance",
    "description": "Verify that all UI components include appropriate ARIA roles, labels, and support keyboard navigation and screen readers.",
    "category": "accessibility",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate through various UI components using keyboard only."
      },
      {
        "type": "assertion",
        "description": "Confirm all interactive elements are reachable and operable via keyboard."
      },
      {
        "type": "action",
        "description": "Inspect components for correct ARIA attributes."
      },
      {
        "type": "assertion",
        "description": "Verify screen reader announces labels and roles properly for all components."
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Responsive Layout Verification Across Multiple Devices",
    "description": "Verify that the application layout adapts correctly on various screen sizes including desktops, tablets, and mobile phones.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the application on desktop viewport."
      },
      {
        "type": "assertion",
        "description": "Verify UI components render correctly with expected spacing and content."
      },
      {
        "type": "action",
        "description": "Resize to tablet and mobile viewport sizes or use device emulators."
      },
      {
        "type": "assertion",
        "description": "Confirm layout reflows appropriately, navigation is accessible, and content remains usable."
      }
    ]
  },
  {
    "id": "TC021",
    "title": "Backend API Error Handling for Task CRUD",
    "description": "Verify that backend errors during task create, update, and delete operations are handled gracefully with user-friendly messages.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate backend API failures (e.g., 500 Internal Server Error) on task create, update, and delete requests."
      },
      {
        "type": "assertion",
        "description": "Confirm user receives clear error notifications or toast messages."
      },
      {
        "type": "assertion",
        "description": "Verify UI does not reflect incomplete changes and remains consistent."
      }
    ]
  },
  {
    "id": "TC022",
    "title": "API Retry Logic Verification on Network Failures",
    "description": "Verify that RESTful API client retries requests on transient network errors and eventually notifies users if unsuccessful.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Simulate network timeouts or transient errors during API calls."
      },
      {
        "type": "assertion",
        "description": "Verify that the client retries the request automatically."
      },
      {
        "type": "assertion",
        "description": "If retries fail, confirm user sees a retry failure notification."
      }
    ]
  },
  {
    "id": "TC023",
    "title": "Local Storage State Persistence",
    "description": "Verify the application save and restores user state (e.g., task filters, dashboard settings) using local storage.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Apply filters or change settings on dashboard and tasks views."
      },
      {
        "type": "action",
        "description": "Reload or close and reopen the browser."
      },
      {
        "type": "assertion",
        "description": "Confirm user state is restored from local storage and UI reflects previous preferences."
      }
    ]
  },
  {
    "id": "TC024",
    "title": "Error Feedback Display Using Alerts and Toast Notifications",
    "description": "Verify that all system and user errors provide feedback via consistent and accessible alerts and toast notifications.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger various types of errors such as form validation errors, API failures, and authentication errors."
      },
      {
        "type": "assertion",
        "description": "Verify that alerts or toast notifications appear promptly with clear messages."
      },
      {
        "type": "assertion",
        "description": "Confirm notifications are accessible (ARIA roles) and dismissable."
      }
    ]
  }
]
